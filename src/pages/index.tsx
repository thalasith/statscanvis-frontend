import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import AreaGraph from "../components/AreaGraph";
import EmploymentSelecter from "../components/EmploymentSelecter";
import LineGraph from "../components/LineGraph";
import { api } from "../utils/api";

const Home: NextPage = () => {
  const [employeeType, setEmployeeType] = useState(
    "Salaried employees paid a fixed salary"
  );
  const [geography, setGeography] = useState("Canada");
  const [startDate, setStartDate] = useState("2022-01-01");
  const [endDate, setEndDate] = useState("2022-12-31");
  const [error, setError] = useState("");

  const { data: employmentData } =
    api.labor_stats.getEmploymentByGeography.useQuery({
      geography: geography,
      typeOfEmployee: employeeType,
      startDate: startDate,
      endDate: endDate,
    });

  const { data: salaryData } =
    api.labor_stats.getWeeklySalaryByGeography.useQuery({
      geography: geography,
      typeOfEmployee: employeeType,
      startDate: startDate,
      endDate: endDate,
    });
  console.log(salaryData);

  const changeStartDate = (date: string) => {
    if (new Date(date) > new Date(endDate)) {
      setError("Start date must be before end date");
      return;
    } else {
      setStartDate(new Date(date).toISOString().slice(0, 10));
      setError("");
    }
  };

  const changeEndDate = (date: string) => {
    if (new Date(date) < new Date(startDate)) {
      setError("End date must be after start date");
      return;
    } else {
      setEndDate(new Date(date).toISOString().slice(0, 10));
      setError("");
    }
  };

  const goodsProducingData = [
    {
      dataKey: "forestry_logging_and_support",
      fill: "#3AB795",
      name: "Forestry",
    },
    {
      dataKey: "mining_quarrying_and_oil_and_gas_extraction",
      fill: "#A0E8AF",
      name: "Mining",
    },
    { dataKey: "utilities", fill: "#86BAA1", name: "Utilities" },
    { dataKey: "construction", fill: "#EDEAD0", name: "Construction" },
    { dataKey: "manufacturing", fill: "#FFCF56", name: "Manufacturing" },
  ];

  const servicesData = [
    {
      dataKey: "trade",
      fill: "#3AB795",
      name: "Trade",
    },
    {
      dataKey: "transportation_and_warehousing",
      fill: "#A0E8AF",
      name: "Transportation and Warehousing",
    },
    {
      dataKey: "information_and_cultural_industries",
      fill: "#86BAA1",
      name: "Information and Cultueral Industries",
    },
    {
      dataKey: "finance_and_insurance",
      fill: "#EDEAD0",
      name: "Finance and Insurance",
    },
    {
      dataKey: "real_estate_and_rental_and_leasing",
      fill: "#FFCF56",
      name: "Real Estate",
    },
  ];

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center">
        <div className="container mx-auto mt-4">
          <EmploymentSelecter
            employeeType={employeeType}
            setEmployeeType={setEmployeeType}
            geography={geography}
            setGeography={setGeography}
            startDate={startDate}
            changeStartDate={changeStartDate}
            endDate={endDate}
            changeEndDate={changeEndDate}
            error={error}
            setError={setError}
          />
          <div className="mx-2 mt-4 flex w-full flex-col items-center rounded bg-red-100 px-8 pt-2">
            <h1 className="mt-2 text-2xl font-bold text-gray-800">
              Goods Producing Industry Data for{" "}
              {employeeType === "All employees"
                ? "All Employees"
                : employeeType === "Salaried employees paid a fixed salary"
                ? "Salaried Employees"
                : "Hourly Employees"}{" "}
              in {geography}
            </h1>
            <div className="flex w-full flex-col lg:flex-row">
              <AreaGraph
                title="Employment By Industry"
                xAxisData={goodsProducingData}
                chartData={employmentData}
              />

              <LineGraph
                title="Average Weekly Earnings"
                xAxisData={goodsProducingData}
                chartData={salaryData}
              />
            </div>
          </div>
          <div className="mx-2 mt-4 flex w-full flex-col items-center rounded bg-red-100 px-8 pt-2">
            <h1 className="mt-2 text-2xl font-bold text-gray-800">
              Services Industry Data for{" "}
              {employeeType === "All employees"
                ? "All Employees"
                : employeeType === "Salaried employees paid a fixed salary"
                ? "Salaried Employees"
                : "Hourly Employees"}{" "}
              in {geography}
            </h1>
            <div className="flex w-full flex-col lg:flex-row">
              <AreaGraph
                title="Employment By Industry"
                xAxisData={servicesData}
                chartData={employmentData}
              />

              <LineGraph
                title="Average Weekly Earnings"
                xAxisData={servicesData}
                chartData={salaryData}
              />
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
